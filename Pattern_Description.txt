We used the following Patterns in our Ursuppe implementation:

**Factory method Pattern**
We used Factories to avoid the 'new' keyword. Every time we create an instance, we do it using Factories, which provide us the requested instance. (At least this was the idea, we didn't exactly get rid of the 'new' keyword. See also AK's comment on Board.java#57: https://github.com/MichaelKohler/P2/blob/master/problemset06/src/Board.java#L57

**Iterator Pattern**
Iterators are used to iterate over lists. Even though it doesn't look like we used them, the lists use them internally to get the requested item.


**Observer Pattern**
As a task for Problemset10 we implemented the Observer pattern. This allows us to decouple the Game from the GUI. It notifies the registered observers every time an event is raised. In the Observer we can handle the event a do whatever needs to be done.
